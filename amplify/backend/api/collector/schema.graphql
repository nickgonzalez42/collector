enum CharacterType {
  SUPERNOVAS
  STRAW_HAT_CREW
  ANIMAL
  ALABASTA
  FISHMAN
  KID_PIRATES
  FIRETANK_PIRATES
  FALLEN_MONK_PIRATES
  NAVY
  BONNEY_PIRATES
  ON_AIR_PIRATES
  HEART_PIRATES
  HAWKINS_PIRATES
  MINKS
  DRAKE_PIRATES
  THE_SEVEN_WARLORDS_OF_THE_SEA
  BAROQUE_WORKS
  THRILLER_BARK_PIRATES
  THE_SUN_PIRATES
  DONQUIXOTE_PIRATES
  REVOLUTIONARY_ARMY
  BUGGYS_DELIVERY
  BIOLOGICAL_WEAPON
  KUJA_PIRATES
  BLACKBEARD_PIRATES
  THE_FOUR_EMPERORS
  ANIMAL_KINGDOM_PIRATES
  SMILE
}

type CollectionCard @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  collectionID: ID! @index(name: "byCollection")
  cardID: String
  quantity: Int
}

type Collection @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  CollectionCards: [CollectionCard] @hasMany(indexName: "byCollection", fields: ["id"])
}

enum Attributes {
  SLASH
  STRIKE
  SPECIAL
  WISDOM
  RANGED
}

enum Color {
  RED
  BLACK
  GREEN
  BLUE
  YELLOW
  PURPLE
}

enum CardType {
  LEADER
  CHARACTER
  EVENT
  STAGE
  DON
}

type Card @model @searchable @auth(rules: [{ allow: public, provider: apiKey }]) {
  id: ID!
  name: String!
  color: [Color!]
  text: String
  cost: Int
  number: String!
  alternate: Boolean!
  setID: ID! @index(name: "bySet") @auth(rules: [{ allow: public, provider: apiKey }])
  set: Set @belongsTo(fields: ["setID"])
  image: String
  cardType: CardType
  attribute: Attributes
  power: Int
  life: Int
  counter: Int
  trigger: String
  characterType: [CharacterType]
}

type Set @model @searchable @auth(rules: [{ allow: public, provider: apiKey }]) {
  id: ID!
  name: String
  cards: [Card] @hasMany(indexName: "bySet", fields: ["id"])
  releaseOrder: String
}
